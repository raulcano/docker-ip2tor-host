#!/usr/bin/env bash
# This script runs a few initial steps to configure the Host machine (outside docker)

# You need to rename to 
# _host-init.sh
# Ensure it's executable
# chmod u+x _host-init.sh
# And change this path to wherever you have the .env file
source /home/ip2tor/docker-ip2tor-host/.env

auth_keys_in_host=${SSH_AUTHORIZED_KEYS_PATH_IN_HOST_MACHINE}
ssh_keys_path_for_container=${SSH_KEYS_PATH_FOR_CONTAINER}
ssh_keys_file=${SSH_KEYS_FILE}

sudo apt-get update -y
sudo apt-get upgrade -y

# OpenSSH installation
sudo apt-get install -y openssh-server 
sudo apt-get install -y openssh-client

sudo cp /etc/ssh/sshd_config  /etc/ssh/sshd_config.original_copy
sudo cp ${auth_keys_in_host} ${auth_keys_in_host}.original_copy

if [ ! -f "${auth_keys_in_host}"]; then
    touch ${auth_keys_in_host}
fi

if [ ! -f "${ssh_keys_path_for_container}${ssh_keys_file}" ]; then
    ssh-keygen -t ed25519 -C "container@ip2tor-host" -f "${ssh_keys_path_for_container}${ssh_keys_file}" -N ''
    echo "Keys for SSH generated. Now, please add the pub key to the authorized_keys file in the host"
else
    echo "Keys for SSH already exist in the .ssh folder. We continue the init sequence..."
fi


echo "Adding the pub key of the container to the authorized_keys of the host machine..."
cat ${ssh_keys_path_for_container}${ssh_keys_file}.pub | sudo tee --append ${auth_keys_in_host}
# Remove duplicate lines from that file to ensure we don't add same keys more than once
sudo awk '!seen[$0]++' ${auth_keys_in_host} | sudo tee  ${auth_keys_in_host}


echo "Configuring SSH: allow login via PubKey, disallow login with password, point to the authorized_keys file..."
# Allow login via PubKey --> PubkeyAuthentication yes
# Disallow login with Password --> PasswordAuthentication no
# Point to the correct authorized_keys file --> AuthorizedKeysFile  ${auth_keys_in_host}

# Comment lines starting with AuthorizedKeysFile, PasswordAuthentication, PubkeyAuthentication
sudo sed -i.bak 's/^\(AuthorizedKeysFile.*\)/#\1/g' /etc/ssh/sshd_config
sudo sed -i.bak 's/^\(PasswordAuthentication.*\)/#\1/g' /etc/ssh/sshd_config
sudo sed -i.bak 's/^\(PubkeyAuthentication.*\)/#\1/g' /etc/ssh/sshd_config

# Append the desired config to the end
echo "AuthorizedKeysFile  ${auth_keys_in_host}" | sudo tee --append /etc/ssh/sshd_config
echo "PasswordAuthentication no" | sudo tee --append /etc/ssh/sshd_config
echo "PubkeyAuthentication yes" | sudo tee --append /etc/ssh/sshd_config

# Restart openssh
sudo /etc/init.d/ssh restart

# Firewall basic installation and config
echo "Installing the firewall and creating the basic config..."
sudo apt-get install -y ufw
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ${IP2TOR_HOST_SSH_PORT}
sudo ufw allow ${TOR_PORT}
sudo ufw allow ${TOS_PORT}
sudo ufw allow ssh
sudo ufw allow OpenSSH
sudo ufw allow 9050
# sudo ufw enable <<<y
sudo ufw enable